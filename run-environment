#!/bin/sh

DOCKER_PROJECT_NAME='amplifix'

remove_container_if_exists() {
    local name=${1}
    if [ "$(docker ps -q -f name=${name})" ]; then
        #docker stop ${name}
        docker rm -f /${name}
    fi
}

docker_compose_up() {
    docker-compose pull
    docker-compose up -d
}

docker_compose_down() {
    docker-compose -f docker-compose.yml --project-name ${DOCKER_PROJECT_NAME} down -v || true
    docker-compose -f docker-compose.yml --project-name ${DOCKER_PROJECT_NAME} rm --force || true
    docker rm "$(docker ps -a -q)" -f || true
}

build() {
    export BUILD_VERSION=test
    docker image rm amplifix:test -f
    ./bin/amplifix build --service-port 8880 --metrics-port 8881
}

set_docker_host_ip() {
    export DOCKERHOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)
}

process_arguments() {

    # Transform long options to short ones
    for arg in "$@"; do
      shift
      case "$arg" in
        "--build")
            set -- "$@" "-x"
            ;;
        *)
            set -- "$@" "$arg"
            ;;
      esac
    done

    while getopts ":x" opt; do
        case ${opt} in
            x)
                build
                ;;
            \?)
                echo "Invalid option: -${OPTARG}!"
                usage
                ;;
        esac
    done

}

process_arguments "${@}"
set_docker_host_ip

sed -e "s/\${IP}/${DOCKERHOST}/g" ./docker/prometheus/prometheus_template.yml > ./docker/prometheus/prometheus.yml
sed -e "s/\${IP}/${DOCKERHOST}/g" ./docker/grafana/datasources/datasources_template.yaml > ./docker/grafana/datasources/datasources.yaml
sed -e "s/\${IP}/${DOCKERHOST}/g" ./docker/nginx/default_template.conf > ./docker/nginx/default.conf

docker_compose_down
docker_compose_up

#sleep 10

# Import Datasource
#curl -XPOST http://localhost:3000/api/datasources -u admin:admin -H "Content-Type: application/json" -H "Accept: application/json" -d @./datasources/prometheus.json | jq "."

# Import Dashboard
#curl -XPOST http://localhost:3000/api/dashboards/import -u admin:admin -H "Content-Type: application/json" -H "Accept: application/json" -d @./dashboards/demo_create_session.json


# Scale to 2 instances (TODO: make generic and automate. Using docker-compose up --scale)
remove_container_if_exists amplifix_server_1
remove_container_if_exists amplifix_server_2
docker run -d --name amplifix_server_1 --rm -e HZ_HOST=${DOCKERHOST} -p 5001:8880 -p 5002:8881 -i -t amplifix:test
docker run -d --name amplifix_server_2 --rm -e HZ_HOST=${DOCKERHOST} -p 5003:8880 -p 5004:8881 -i -t amplifix:test